log_format realip '$http_x_real_ip - $remote_user [$time_local] '
                  '"$request" $status $body_bytes_sent '
                  '"$http_referer" "$http_user_agent"';

map $http_upgrade $connection_upgrade {
  default upgrade;
  '' close;
}

{% for (name, options) in nginx_config.upstream.items() %}
upstream {{ name }} {
  server {{ options.name }}:{{ options.port }} max_fails=0;
}

{% endfor %}
{% if 'trading' in groups %}
upstream grafana {
  server grafana.service:{{ grafana_config.port }} max_fails=0;
}

upstream prometheus {
  server prometheus.service:{{ prometheus_config.port }} max_fails=0;
}

{% endif %}
server {

  access_log /var/log/nginx/access.log realip;
  error_log /var/log/nginx/error.log;

  listen {{ nginx_config.listen }}:{{ nginx_config.http_port }};

  location / {
    root /var/www/html;
    try_files $uri $uri/ $uri/index.html =404;
  }

{% if 'trading' in groups %}
  location /prometheus/ {
    proxy_set_header Accept-Encoding "";
    proxy_pass http://prometheus;
    proxy_set_header Host $http_host:$server_port;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
  }

  location /grafana/ {
    proxy_pass http://grafana/;
    proxy_set_header Host $host;
  }

{% endif %}
{% for location in nginx_config.server_location %}
{% for (name, options) in location.items() %}
  location {{ name }} {
{% for option in options %}
    {{ option }};
{% endfor %}
{% endfor %}
  }

{% endfor %}
  location ~ ^/roq/service/([\w-]*)/(.*)$ {
    proxy_pass http://unix:/run/roq/service/$1.sock:/$2$is_args$args;
  }

}
